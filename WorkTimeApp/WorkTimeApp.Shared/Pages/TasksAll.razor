@page "/tasks/all/{userid}"
@inject NavigationManager Navigation

@using Microsoft.AspNetCore.Components
@using System.Text.Json
@using WorkTimeApp.Shared.Model

<PageTitle>Active Tasks</PageTitle>

<h1>Active Tasks</h1>

<p role="status">All tasks: @tasks.Count()</p>

<button class="btn btn-primary" @onclick="AddTask">Add Task</button>
@if (tasks.Any())
{
    <div class="task-cards">
        <WorkTimeApp.Shared.Components.TaskList tasks="@tasks" Userid="@Userid"></WorkTimeApp.Shared.Components.TaskList>
    </div>
}
else
{
    <p>No tasks available.</p>
}

<style>
    .task-cards {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .card {
        width: 18rem;
        margin: 1rem;
    }

    .card-body {
        background-color: #f8f9fa;
        border-radius: 0.5rem;
        padding: 1rem;
    }
</style>

@code {
    [Parameter]
    public string Userid { get; set; } = null!;


    //private bool ActiveFilter(TaskModel task) => !task.completed;
    static HttpClient httpClient = new HttpClient();


    public List<TaskModel> tasks = new List<TaskModel>();

    private void AddTask()
    {

        Navigation.NavigateTo("addTask/" + Userid);
    }

    protected override async Task OnInitializedAsync()
    {

#if ANDROID
        var response = await httpClient.GetStringAsync($"http://10.0.2.2:5076/api/tasks/user/{Userid}");
#else
        var response = await httpClient.GetStringAsync($"http://localhost:5076/api/tasks/user/{Userid}");
#endif
        if (!string.IsNullOrEmpty(response))
        {
            var deserializedTask = JsonSerializer.Deserialize<List<TaskModel>>(response);
            if (deserializedTask != null)
            {
                tasks = deserializedTask;
            }

        }
    }



}
