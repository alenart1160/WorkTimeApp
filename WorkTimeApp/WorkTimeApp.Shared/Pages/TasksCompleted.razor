@page "/tasks/completed/{userid:int}"

@using Microsoft.AspNetCore.Components
@using System.Text.Json
@using WorkTimeApp.Shared.Model
@using WorkTimeApp.Shared.Services

@inject NavigationManager Navigation
@inject ApiService ApiService

<PageTitle>Active Tasks</PageTitle>

<h1>Completed Tasks</h1>

<p role="status">Completed tasks: @tasks.Count(t => t.completed)</p>

@if (tasks.Any())
{
    <div class="task-cards">
        <WorkTimeApp.Shared.Components.TaskList tasks="@tasks" FilterFunc="ActiveFilter"></WorkTimeApp.Shared.Components.TaskList>
    </div>
}
else
{
    <p>No tasks available.</p>
}

<style>
    .task-cards {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .card {
        width: 18rem;
        margin: 1rem;
    }

    .card-body {
        background-color: #f8f9fa;
        border-radius: 0.5rem;
        padding: 1rem;
    }
</style>

@code {
    [Parameter]
    public int Userid { get; set; }


    private bool ActiveFilter(TaskModel task) => task.completed;
    static HttpClient httpClient = new HttpClient();


    public List<TaskModel> tasks = new List<TaskModel>();

    private void AddTask()
    {

        Navigation.NavigateTo("addTask/" + Userid);
    }

    protected override async Task OnInitializedAsync()
    {


        var result = await ApiService.GetProtectedDataAsync("/api/tasks/user/");

        if (!string.IsNullOrEmpty(result))
        {
            var deserializedTask = JsonSerializer.Deserialize<List<TaskModel>>(result);
            if (deserializedTask != null)
            {
                tasks = deserializedTask;
            }
        }
    }



}
